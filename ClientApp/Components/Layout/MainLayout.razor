@inherits LayoutComponentBase
@inject IAuthenticationService AuthService
@inject NavigationManager NavigationManager

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@DrawerToggle" />
        <MudText Typo="Typo.h6" Class="ml-3">Gerenciador Financeiro</MudText>
        <MudSpacer />
        <MudToggleIconButton @bind-Toggled="@_isDarkMode"
                            Icon="@Icons.Material.Filled.LightMode" Title="Modo Claro"
                            ToggledIcon="@Icons.Material.Filled.DarkMode" ToggledTitle="Modo Escuro"
                            Color="Color.Inherit" />
        <AuthorizeView>
            <Authorized>
                <MudMenu Direction="Direction.BottomEnd" OffsetY="true" Dense="true">
                    <ActivatorContent>
                        <MudAvatar Color="Color.Primary" Style="height: 40px; width: 40px; margin-left: 16px;">
                            @context.User.Identity?.Name?.Substring(0, 1).ToUpper()
                        </MudAvatar>
                    </ActivatorContent>
                    <ChildContent>
                        <MudMenuItem Icon="@Icons.Material.Filled.Person" OnClick="@(() => NavigationManager.NavigateTo("/perfil"))">Meu Perfil</MudMenuItem>
                        <MudMenuItem Icon="@Icons.Material.Filled.Settings" OnClick="@(() => NavigationManager.NavigateTo("/configuracoes"))">Configurações</MudMenuItem>
                        <MudDivider />
                        <MudMenuItem Icon="@Icons.Material.Filled.Logout" OnClick="@Logout">Sair</MudMenuItem>
                    </ChildContent>
                </MudMenu>
            </Authorized>
            <NotAuthorized>
                <MudButton Variant="Variant.Text" Color="Color.Inherit" OnClick="@(() => NavigationManager.NavigateTo("/login"))">Entrar</MudButton>
                <MudButton Variant="Variant.Outlined" Color="Color.Inherit" Class="ml-2" OnClick="@(() => NavigationManager.NavigateTo("/register"))">Cadastrar</MudButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    
    <MudDrawer @bind-Open="_drawerOpen" Elevation="2" ClipMode="DrawerClipMode.Always">
        <NavMenu />
    </MudDrawer>
    
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="pa-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = false;
    private MudTheme _theme = new MudTheme();

    protected override async Task OnInitializedAsync()
    {
        var user = await AuthService.GetCurrentUser();
        if (user != null)
        {
            _isDarkMode = user.UseDarkTheme;
        }

        // Configurações do tema
        _theme = new MudTheme
        {
            Palette = new PaletteLight
            {
                Primary = "#1976d2",
                Secondary = "#ff9800",
                AppbarBackground = "#1976d2",
                Background = "#f5f5f5",
                DrawerBackground = "#ffffff",
                TextPrimary = "#424242",
                TextSecondary = "#616161"
            },
            PaletteDark = new PaletteDark
            {
                Primary = "#90caf9",
                Secondary = "#ffb74d",
                AppbarBackground = "#1e1e1e",
                Background = "#121212",
                DrawerBackground = "#1e1e1e",
                TextPrimary = "#e0e0e0",
                TextSecondary = "#9e9e9e"
            }
        };
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task Logout()
    {
        await AuthService.Logout();
        NavigationManager.NavigateTo("/");
    }
}