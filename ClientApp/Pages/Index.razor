@page "/"

<PageTitle>Dashboard - Gerenciador Financeiro</PageTitle>

<MudContainer MaxWidth="MaxWidth.False">
    <MudText Typo="Typo.h4" Class="mb-4">Dashboard</MudText>

    <MudGrid>
        <!-- Saldo total -->
        <MudItem xs="12" sm="6" md="3">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 100%;">
                <MudText Typo="Typo.subtitle1" Color="Color.Primary">Saldo Total</MudText>
                <MudText Typo="Typo.h5">R$ 12.345,67</MudText>
                <MudText Typo="Typo.caption" Color="Color.Success">+2,5% este mês</MudText>
            </MudPaper>
        </MudItem>

        <!-- Receitas -->
        <MudItem xs="12" sm="6" md="3">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 100%;">
                <MudText Typo="Typo.subtitle1" Color="Color.Success">Receitas (este mês)</MudText>
                <MudText Typo="Typo.h5">R$ 4.500,00</MudText>
                <MudText Typo="Typo.caption">+15,2% em relação ao mês anterior</MudText>
            </MudPaper>
        </MudItem>

        <!-- Despesas -->
        <MudItem xs="12" sm="6" md="3">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 100%;">
                <MudText Typo="Typo.subtitle1" Color="Color.Error">Despesas (este mês)</MudText>
                <MudText Typo="Typo.h5">R$ 2.750,00</MudText>
                <MudText Typo="Typo.caption">-5,1% em relação ao mês anterior</MudText>
            </MudPaper>
        </MudItem>

        <!-- Economia -->
        <MudItem xs="12" sm="6" md="3">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 100%;">
                <MudText Typo="Typo.subtitle1" Color="Color.Info">Economia (este mês)</MudText>
                <MudText Typo="Typo.h5">R$ 1.750,00</MudText>
                <MudText Typo="Typo.caption">38,9% da receita</MudText>
            </MudPaper>
        </MudItem>

        <!-- Gráfico de receitas e despesas -->
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="pa-4">
                <MudText Typo="Typo.h6" Class="mb-4">Receitas x Despesas (últimos 6 meses)</MudText>
                <div class="chart-placeholder">
                    <!-- Aqui entrará um componente de gráfico de barras -->
                    <div class="mock-chart"></div>
                </div>
            </MudPaper>
        </MudItem>

        <!-- Gráfico de distribuição de gastos por categoria -->
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="pa-4">
                <MudText Typo="Typo.h6" Class="mb-4">Gastos por Categoria (este mês)</MudText>
                <div class="chart-placeholder">
                    <!-- Aqui entrará um componente de gráfico de pizza -->
                    <div class="mock-chart"></div>
                </div>
            </MudPaper>
        </MudItem>

        <!-- Últimas transações -->
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="pa-4">
                <MudText Typo="Typo.h6" Class="mb-4">Últimas Transações</MudText>
                <MudTable Items="@_lastTransactions" Hover="true" Elevation="0">
                    <HeaderContent>
                        <MudTh>Data</MudTh>
                        <MudTh>Descrição</MudTh>
                        <MudTh>Categoria</MudTh>
                        <MudTh Style="text-align: right">Valor</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>@context.Date.ToString("dd/MM/yyyy")</MudTd>
                        <MudTd>@context.Description</MudTd>
                        <MudTd>@context.Category</MudTd>
                        <MudTd Style="text-align: right">
                            <MudText Color="@(context.Type == "Despesa" ? Color.Error : Color.Success)">
                                @(context.Type == "Despesa" ? "-" : "+")R$ @context.Amount.ToString("N2")
                            </MudText>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
                <div class="d-flex justify-end mt-4">
                    <MudButton Variant="Variant.Text" Color="Color.Primary" Href="/transactions">Ver todas</MudButton>
                </div>
            </MudPaper>
        </MudItem>

        <!-- Próximos vencimentos -->
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="pa-4">
                <MudText Typo="Typo.h6" Class="mb-4">Próximos Vencimentos</MudText>
                <MudTable Items="@_upcomingPayments" Hover="true" Elevation="0">
                    <HeaderContent>
                        <MudTh>Vencimento</MudTh>
                        <MudTh>Descrição</MudTh>
                        <MudTh>Tipo</MudTh>
                        <MudTh Style="text-align: right">Valor</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>
                            <MudText Color="@(IsOverdue(context.DueDate) ? Color.Error : Color.Default)">
                                @context.DueDate.ToString("dd/MM/yyyy")
                            </MudText>
                        </MudTd>
                        <MudTd>@context.Description</MudTd>
                        <MudTd>@context.Type</MudTd>
                        <MudTd Style="text-align: right">R$ @context.Amount.ToString("N2")</MudTd>
                    </RowTemplate>
                </MudTable>
                <div class="d-flex justify-end mt-4">
                    <MudButton Variant="Variant.Text" Color="Color.Primary" Href="/budgets">Ver todos</MudButton>
                </div>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

<style>
    .chart-placeholder {
        height: 300px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .mock-chart {
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #f5f5f5 25%, #e9e9e9 25%, #e9e9e9 50%, #f5f5f5 50%, #f5f5f5 75%, #e9e9e9 75%, #e9e9e9 100%);
        background-size: 20.00px 20.00px;
        border-radius: 4px;
    }
</style>

@code {
    private class Transaction
    {
        public DateTime Date { get; set; }
        public string Description { get; set; }
        public string Category { get; set; }
        public decimal Amount { get; set; }
        public string Type { get; set; }
    }

    private class UpcomingPayment
    {
        public DateTime DueDate { get; set; }
        public string Description { get; set; }
        public string Type { get; set; }
        public decimal Amount { get; set; }
    }

    private List<Transaction> _lastTransactions = new List<Transaction>
    {
        new Transaction { Date = DateTime.Now.AddDays(-1), Description = "Supermercado Extra", Category = "Alimentação", Amount = 245.67m, Type = "Despesa" },
        new Transaction { Date = DateTime.Now.AddDays(-2), Description = "Salário", Category = "Renda", Amount = 4500.00m, Type = "Receita" },
        new Transaction { Date = DateTime.Now.AddDays(-3), Description = "Netflix", Category = "Entretenimento", Amount = 39.90m, Type = "Despesa" },
        new Transaction { Date = DateTime.Now.AddDays(-5), Description = "Farmácia", Category = "Saúde", Amount = 87.54m, Type = "Despesa" },
        new Transaction { Date = DateTime.Now.AddDays(-7), Description = "Transferência recebida", Category = "Transferência", Amount = 350.00m, Type = "Receita" }
    };

    private List<UpcomingPayment> _upcomingPayments = new List<UpcomingPayment>
    {
        new UpcomingPayment { DueDate = DateTime.Now.AddDays(-2), Description = "Internet", Type = "Conta", Amount = 99.90m },
        new UpcomingPayment { DueDate = DateTime.Now.AddDays(3), Description = "Aluguel", Type = "Moradia", Amount = 1500.00m },
        new UpcomingPayment { DueDate = DateTime.Now.AddDays(7), Description = "Fatura Cartão Nubank", Type = "Cartão de Crédito", Amount = 1250.45m },
        new UpcomingPayment { DueDate = DateTime.Now.AddDays(10), Description = "Energia Elétrica", Type = "Conta", Amount = 175.33m },
        new UpcomingPayment { DueDate = DateTime.Now.AddDays(12), Description = "Plano de Saúde", Type = "Saúde", Amount = 450.00m }
    };

    private bool IsOverdue(DateTime dueDate)
    {
        return dueDate < DateTime.Today;
    }
}