@page "/login"
@using System.ComponentModel.DataAnnotations
@using FinanceManager.ClientApp.Services.Interfaces
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation
@layout EmptyLayout

<PageTitle>Login - Gerenciador Financeiro</PageTitle>

<MudCard Class="pa-6" Elevation="10" Style="max-width: 500px;">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h4" Class="my-4">Gerenciador Financeiro</MudText>
            <MudText Typo="Typo.h6">Entrar na sua conta</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    
    <MudCardContent>
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <MudAlert Severity="Severity.Error" Class="mb-4">@errorMessage</MudAlert>
            }
            
            <MudTextField @bind-Value="model.Email" Label="Email" 
                         Variant="Variant.Outlined" Class="mt-3" 
                         FullWidth="true" Required="true" 
                         InputType="InputType.Email" />
            
            <MudTextField @bind-Value="model.Password" Label="Senha" 
                         Variant="Variant.Outlined" Class="mt-4" 
                         FullWidth="true" Required="true" 
                         InputType="InputType.Password" />
            
            <MudCheckBox @bind-Checked="model.RememberMe" Label="Lembrar de mim" 
                        Color="Color.Primary" Class="mt-4" />
            
            <div class="d-flex justify-space-between align-center mt-4">
                <MudLink Href="/esqueci-senha">Esqueceu a senha?</MudLink>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" 
                          ButtonType="ButtonType.Submit" Disabled="@isLoading">
                    @if (isLoading)
                    {
                        <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="mr-2" />
                        <MudText>Entrando...</MudText>
                    }
                    else
                    {
                        <MudText>Entrar</MudText>
                    }
                </MudButton>
            </div>
        </EditForm>
    </MudCardContent>
    
    <MudCardActions Class="pb-4 px-6 d-flex justify-center">
        <MudText>Não tem uma conta? <MudLink Href="/registro">Cadastre-se</MudLink></MudText>
    </MudCardActions>
</MudCard>

@code {
    private LoginModel model = new LoginModel();
    private bool isLoading = false;
    private string errorMessage = string.Empty;
    
    [Parameter]
    [SupplyParameterFromQuery(Name = "returnUrl")]
    public string ReturnUrl { get; set; }
    
    private async Task OnValidSubmit()
    {
        isLoading = true;
        errorMessage = string.Empty;
        
        try
        {
            var result = await AuthService.Login(model.Email, model.Password);
            
            if (result.Success)
            {
                var url = string.IsNullOrEmpty(ReturnUrl) ? "/" : ReturnUrl;
                Navigation.NavigateTo(url);
            }
            else
            {
                errorMessage = result.Message;
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Ocorreu um erro ao tentar fazer login. Por favor, tente novamente.";
            Console.WriteLine($"Erro ao fazer login: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
    
    public class LoginModel
    {
        [Required(ErrorMessage = "O email é obrigatório")]
        [EmailAddress(ErrorMessage = "O email não é válido")]
        public string Email { get; set; }
        
        [Required(ErrorMessage = "A senha é obrigatória")]
        [MinLength(6, ErrorMessage = "A senha deve ter pelo menos 6 caracteres")]
        public string Password { get; set; }
        
        public bool RememberMe { get; set; }
    }
}