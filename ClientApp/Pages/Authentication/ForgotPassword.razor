@page "/forgot-password"
@layout Login.EmptyLayout
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.Small" Class="d-flex align-center justify-center mud-height-full">
    <MudPaper Elevation="3" Class="pa-8 auth-card">
        <MudText Typo="Typo.h4" Class="mb-4" Align="Align.Center">Finance Manager</MudText>
        <MudText Typo="Typo.h5" Align="Align.Center" GutterBottom="true">Reset Your Password</MudText>
        
        @if (_isEmailSent)
        {
            <MudAlert Severity="Severity.Success" Class="my-4">
                If an account with this email exists, we've sent a password reset link. 
                Please check your inbox and follow the instructions.
            </MudAlert>
            
            <MudButton 
                Variant="Variant.Filled" 
                Color="Color.Primary" 
                FullWidth="true"
                Href="/login" 
                Class="mb-3">Return to Login</MudButton>
        }
        else
        {
            <MudText Typo="Typo.body2" Class="mb-4" Align="Align.Center">
                Enter your email address below and we'll send you a link to reset your password.
            </MudText>
            
            <MudForm @ref="_form" @bind-IsValid="@_success" @bind-Errors="@_errors">
                <MudTextField 
                    T="string" 
                    Label="Email" 
                    @bind-Value="_email" 
                    Required="true" 
                    RequiredError="Email is required!"
                    Validation="@(new EmailAddressAttribute() { ErrorMessage = "That doesn't look like a valid email address" })"
                    Variant="Variant.Outlined" 
                    Class="mb-3" />
                    
                @if (_isBusy)
                {
                    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-3" />
                }
                
                <MudButton 
                    Variant="Variant.Filled" 
                    Color="Color.Primary" 
                    FullWidth="true" 
                    Disabled="@(!_success || _isBusy)" 
                    OnClick="SendResetLinkAsync" 
                    Class="mb-3">Send Reset Link</MudButton>
                
                <MudDivider Class="my-4" />
                
                <MudText Align="Align.Center">
                    <MudLink Href="/login">Back to Login</MudLink>
                </MudText>
            </MudForm>
        }
    </MudPaper>
</MudContainer>

@code {
    private string _email = string.Empty;
    private bool _success;
    private string[] _errors = { };
    private MudForm _form;
    private bool _isBusy = false;
    private bool _isEmailSent = false;
    
    private async Task SendResetLinkAsync()
    {
        if (!_success)
        {
            Snackbar.Add("Please enter a valid email address.", Severity.Warning);
            return;
        }
        
        _isBusy = true;
        
        try
        {
            var result = await AuthService.ForgotPasswordAsync(_email);
            
            // Always show success even if email doesn't exist (security best practice)
            _isEmailSent = true;
        }
        catch (Exception ex)
        {
            // Log error but don't show detailed error to user (security)
            Console.WriteLine($"Error in forgot password: {ex.Message}");
            _isEmailSent = true; // Still show success message
        }
        finally
        {
            _isBusy = false;
        }
    }
}
