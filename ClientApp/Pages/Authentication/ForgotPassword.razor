@page "/forgot-password"
@layout Components.Layout.EmptyLayout
@using FinanceManager.ClientApp.Services.Interfaces
@using FinanceManager.ClientApp.Models

@inject IAuthenticationService AuthService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<div class="forgot-password-container">
    <MudCard Elevation="4" Class="px-4 py-8" Style="width: 100%; max-width: 450px;">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-4">Gerenciador Financeiro</MudText>
                <MudText Typo="Typo.h5" Align="Align.Center">Recuperar Senha</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            @if (!_emailSent)
            {
                <MudText Align="Align.Center" Class="mb-4">
                    Informe seu email para receber as instruções de recuperação de senha.
                </MudText>

                <EditForm Model="@forgotPasswordModel" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    
                    <MudTextField Label="Email" 
                                @bind-Value="forgotPasswordModel.Email" 
                                For="@(() => forgotPasswordModel.Email)"
                                Variant="Variant.Outlined" 
                                Margin="Margin.Dense"
                                FullWidth="true" 
                                Required="true"
                                InputType="InputType.Email"
                                Class="mb-4" />
                    
                    <MudButton Variant="Variant.Filled" 
                            Color="Color.Primary" 
                            ButtonType="ButtonType.Submit" 
                            FullWidth="true"
                            Size="Size.Large"
                            Disabled="@_processing">
                        @if (_processing)
                        {
                            <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="mr-2" />
                            <span>Processando...</span>
                        }
                        else
                        {
                            <span>Enviar Instruções</span>
                        }
                    </MudButton>
                    
                    @if (!string.IsNullOrEmpty(_errorMessage))
                    {
                        <MudAlert Severity="Severity.Error" Class="mt-4">@_errorMessage</MudAlert>
                    }
                </EditForm>
            }
            else
            {
                <MudAlert Severity="Severity.Success" Variant="Variant.Filled" Class="mb-4">
                    As instruções para redefinir sua senha foram enviadas para @forgotPasswordModel.Email
                </MudAlert>
                
                <MudText Align="Align.Center" Class="mb-4">
                    Verifique sua caixa de entrada e siga as instruções no email.
                </MudText>
                
                <MudButton Variant="Variant.Filled" 
                        Color="Color.Primary" 
                        FullWidth="true"
                        Size="Size.Large"
                        OnClick="@(() => NavigationManager.NavigateTo("/login"))">
                    Voltar para Login
                </MudButton>
            }
            
            <MudDivider Class="my-4" />
            
            <MudStack Row="true" Justify="Justify.Center">
                <MudLink Href="login" Underline="Underline.Always">Voltar para Login</MudLink>
            </MudStack>
        </MudCardContent>
    </MudCard>
</div>

<style>
    .forgot-password-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
        padding: 1rem;
    }
</style>

@code {
    private ForgotPasswordModel forgotPasswordModel = new ForgotPasswordModel();
    private bool _processing = false;
    private bool _emailSent = false;
    private string _errorMessage = string.Empty;

    protected override void OnInitialized()
    {
        // Verifica se já está autenticado
        if (AuthService.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/");
        }
    }

    private async Task HandleValidSubmit()
    {
        _processing = true;
        _errorMessage = string.Empty;

        try
        {
            var result = await AuthService.ForgotPasswordAsync(forgotPasswordModel);
            
            if (result.Success)
            {
                _emailSent = true;
            }
            else
            {
                _errorMessage = result.Message ?? "Ocorreu um erro ao enviar as instruções de recuperação de senha.";
            }
        }
        catch (Exception ex)
        {
            _errorMessage = $"Erro: {ex.Message}";
        }
        finally
        {
            _processing = false;
        }
    }
}